# -----------------------------------------------------------------
# Configuración de Usuario para Pruebas
# -----------------------------------------------------------------
# Tu número de WhatsApp personal para enviar mensajes de prueba.
# Formato internacional sin símbolos, ej: 5491123456789
MY_PHONE_NUMBER= # <-- TU NÚMERO DE WHATSAPP

# -----------------------------------------------------------------
# Configuracion de Google Calendar y Sheets API
# -----------------------------------------------------------------
# Ve a la configuración de cada calendario en Google Calendar y busca su ID.
# Suele ser una dirección de correo larga que termina en @group.calendar.google.com
CALENDAR_ID_EXAMENES= # <-- ID DEL CALENDARIO DE EXÁMENES
CALENDAR_ID_INSCRIPCIONES= # <-- ID DEL CALENDARIO DE INSCRIPCIONES
CALENDAR_ID_CURSADA= # <-- ID DEL CALENDARIO DE CURSADA
CALENDAR_ID_TRAMITES= # <-- ID DEL CALENDARIO DE TRÁMITES

# La API Key que creaste y restringiste a Calendar y Sheets.
# RECOMENDACIÓN: Guárdala en Secret Manager y cárgala desde ahí.
GOOGLE_API_KEY= # <-- TU GOOGLE API KEY

# El ID de tu hoja de cálculo de Google Sheets.
CURSOS_SPREADSHEET_ID=1LbsmdSYS9UFaWtSwObYJQey-mCnFnlaT-rPzdwMbwbg # <-- ¡YA LO TENEMOS!

# -----------------------------------------------------------------
# Configuración de WhatsApp Business API (Meta for Developers)
# -----------------------------------------------------------------
# Todos estos valores los encuentras en el panel de tu app en Meta for Developers.
WHATSAPP_API_TOKEN= # <-- TU TOKEN DE ACCESO
WHATSAPP_PHONE_NUMBER_ID= # <-- ID DE TU NÚMERO DE TELÉFONO
WHATSAPP_BUSINESS_ACCOUNT_ID= # <-- ID DE TU CUENTA DE NEGOCIO
WHATSAPP_WEBHOOK_VERIFY_TOKEN= # <-- CREA UNA CADENA DE TEXTO SEGURA, EJ: "clave-secreta-123"

# -----------------------------------------------------------------
# Configuración del Servidor y Backend
# -----------------------------------------------------------------
# La URL pública que te dará Glitch, Cloud Run o donde despliegues el webhook.
# Ejemplo: https://tu-proyecto.glitch.me/webhook
BACKEND_URL= # <-- URL PÚBLICA DE TU WEBHOOK

# Configuración estándar para servicios web.
HOST=0.0.0.0 # <-- SUGERENCIA: Permite conexiones desde cualquier IP (necesario para contenedores).
PORT=8080 # <-- SUGERENCIA: Puerto estándar para servicios en la nube.

# -----------------------------------------------------------------
# Configuración de modelos de OpenAI
# -----------------------------------------------------------------
# Tu clave de API de OpenAI.
OPENAI_API_KEY= # <-- TU OPENAI API KEY

# Modelos recomendados por balance de costo/rendimiento.
PRIMARY_MODEL=gpt-4o # <-- SUGERENCIA: El mejor modelo para respuestas de alta calidad.
FALLBACK_MODEL=gpt-3.5-turbo # <-- SUGERENCIA: Un modelo más rápido y barato como respaldo.
EMBEDDING_MODEL=text-embedding-3-small # <-- SUGERENCIA: Eficiente y de bajo costo para RAG.

# -----------------------------------------------------------------
# Parámetros de generación (Ajustes finos para la IA)
# -----------------------------------------------------------------
TEMPERATURE=0.3 # <-- SUGERENCIA: Un valor bajo para respuestas más predecibles y factuales.
TOP_P=1.0 # <-- SUGERENCIA: Dejar el valor por defecto.
TOP_K=40 # <-- SUGERENCIA: Dejar el valor por defecto.
MAX_OUTPUT_TOKENS=1024 # <-- SUGERENCIA: Límite razonable para respuestas de chatbot.
API_TIMEOUT=120 # <-- SUGERENCIA: 2 minutos para evitar que la API se corte en consultas complejas.

# -----------------------------------------------------------------
# Configuración de RAG (Retrieval-Augmented Generation)
# -----------------------------------------------------------------
RAG_NUM_CHUNKS=5 # <-- SUGERENCIA: Traer los 5 trozos de información más relevantes.
SIMILARITY_THRESHOLD=0.75 # <-- SUGERENCIA: Un buen punto de partida para la similitud.
MAX_HISTORY_LENGTH=6 # <-- SUGERENCIA: Recordar las últimas 3 interacciones (pregunta-respuesta).

# -----------------------------------------------------------------
# Configuración de Directorios y Dispositivo
# -----------------------------------------------------------------
EMBEDDINGS_DIR=./embeddings # <-- SUGERENCIA: Carpeta para guardar los embeddings localmente.
DEVICE=cpu # <-- SUGERENCIA: Usa CPU, es suficiente y compatible con Cloud Run/Functions.

# -----------------------------------------------------------------
# Configuración del Entorno y Logs
# -----------------------------------------------------------------
ENVIRONMENT=production # <-- SUGERENCIA: Cambia a "development" cuando hagas pruebas locales.
LOG_LEVEL=INFO # <-- SUGERENCIA: Nivel de log estándar para producción.
LOG_FORMAT=json # <-- SUGERENCIA: Formato ideal para que Google Cloud Logging lo procese.

# -----------------------------------------------------------------
# Integraciones y Google Cloud Storage
# -----------------------------------------------------------------
# Activa la integración con el sistema que sube los PDFs.
DRCECIM_UPLOAD_INTEGRATION=True # <-- SUGERENCIA

# Activa el uso de Google Cloud Storage para los embeddings.
USE_GCS=True # <-- SUGERENCIA
GCS_BUCKET_NAME=drcecim-chatbot-storage # <-- ¡YA LO TENEMOS!
GCS_AUTO_REFRESH=True # <-- SUGERENCIA: Refresca los embeddings si cambian en el bucket.
GCS_REFRESH_INTERVAL=3600 # <-- SUGERENCIA: Revisa si hay cambios cada 1 hora (3600 segundos).

# -----------------------------------------------------------------
# Desarrollo
# -----------------------------------------------------------------
DEBUG=False # <-- SUGERENCIA: Ponlo en "True" solo para pruebas locales.